#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include "RSA.h"
#include "BigInt.h"

using namespace RSAUtil;
using namespace std;


int main()
{    
    RSA alice, bob;
    BigInt publicKey, n, r, i, message, encryptedMessage, blindedMessage, value, signedMessage, targetMessage, original;
    int success=0;
    
    publicKey = bob.getPublicKey();
    n = bob.getModulus();
    r = BigInt(rand());
    i = modInverse(r, n);
    message = BigInt(0x87654321);
    encryptedMessage = bob.encrypt(r);
    blindedMessage = (encryptedMessage * message)%n;
    value = bob.decrypt(blindedMessage);
    signedMessage = (value*i)%n;
    targetMessage = bob.decrypt(message);
    original = bob.encrypt(signedMessage);

    if ((signedMessage == targetMessage)&&(message == original))
        success=1;

    cout << "Bob's Public key: " << publicKey.toHexString() << endl;
    cout << "Bob's Modulus (N): " << n.toHexString() << endl;
    cout << "Random Number (R): " << r.toHexString() << endl; 
    cout << "Inverse (I): " << i.toHexString() << endl; 
    cout << "Message (generated by Alice): " << message.toHexString() << endl;
    cout << "Message Encrypted with R: " << encryptedMessage.toHexString() << endl;


    cout << "Blinded Message: " << blindedMessage.toHexString() << endl;
    cout << "Blind Signature: " << value.toHexString() << endl;


    cout << "Target Message: " << targetMessage.toHexString() << endl;
    cout << "Signed Message: " << signedMessage.toHexString() << endl;
    cout << "Original Message: " << original.toHexString() << endl;
    
    if (success==1)
        cout<< "Blind Signature success"<<endl;
    else
        cout<< "Blind Signature failed"<<endl;

    return 0;
}